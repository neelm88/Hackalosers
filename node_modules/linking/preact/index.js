'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var redux = require('redux');
var preact = require('preact');
var linkFactory = require('linking');
var linkFactory__default = _interopDefault(linkFactory);

function composeReduce(reducers) {
  let wrapped;
  wrapped = Object.entries(reducers).map(function ([key, reducer]) {
    return {
      [key]: typeof reducer === "function" ? reducer : linkFactory.handleActions(reducer)
    };
  });
  return redux.combineReducers(Object.assign(...wrapped));
}

function setup({
  composeReduce,
  Component: Component$$1,
  h: h$$1,
  render: render$$1,
  linkFactory: linkFactory$$1,
  sideEffectFactory
}) {
  let link;
  link = linkFactory$$1({
    Component: Component$$1
  });
  return {
    link,
    sideEffect: sideEffectFactory(Component$$1),
    startApp: function ({
      reducers,
      preload,
      component,
      env = window,
      el = "#root"
    }) {
      let state, store, container, root, replaceApp;
      state = (typeof preload == "function" ? preload(env) : void 8) || preload;
      store = redux.createStore(composeReduce(reducers), state, env != null ? typeof env.__REDUX_DEVTOOLS_EXTENSION__ == "function" ? env.__REDUX_DEVTOOLS_EXTENSION__() : void 8 : void 8);
      container = env != null ? env.document.querySelector(el) : void 8;
      root = container.firstElementChild;
      return typeof module !== "undefined" && module.hot ? (replaceApp = function (it) {
        root = render$$1(h$$1(link(it), {
          store
        }), container, root);
      }, replaceApp(component), Object.assign({}, store, {
        replaceApp
      }, {
        replaceReducer: function (it) {
          return store.replaceReducer(composeReduce(it));
        }
      })) : (render$$1(h$$1(link(component), {
        store
      }), container, root), store);
    }
  };
}

({
  link: exports.link,
  startApp: exports.startApp,
  sideEffect: exports.sideEffect
} = setup({
  composeReduce,
  h: preact.h,
  Component: preact.Component,
  render: preact.render,
  linkFactory: linkFactory__default,
  sideEffectFactory: linkFactory.sideEffect
}));

function renderVdom({
  reducers,
  preload,
  component
}) {
  let state, store;
  state = preload({}) || preload;
  store = createStore(composeReduce(reducers), state);
  return preact.h(exports.link(component), {
    store
  });
}

exports['default'] = exports.link;
exports.linkStart = exports.startApp;
exports.h = preact.h;
exports.renderVdom = renderVdom;
//# sourceMappingURL=index.js.map
